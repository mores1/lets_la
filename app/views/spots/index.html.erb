<div class="indexcont container">
  <div class="map-box">
    <div id='map'></div>
  </div>
  <div class="nav-box d-flex justify-content-between">
    <div class="select-form">
      既存スポットから検索!<br>
      <select id="start">
      <% @spots.each do |spot| %>
        <option value="<%= spot.lat %>,<%= spot.lng %>"><%= spot.title %></option>
      <% end %>
      </select><br>
      ↓<br>
      <select id="end">
        <% @spots.each do |spot| %>
          <option value="<%= spot.lat %>,<%= spot.lng %>"><%= spot.title %></option>
        <% end %>
      </select><br>
      <select id="reset">
        <option value="leave">残す</option>
        <option value="delete">消す</option>
      </select>
      <input type="submit" id="btn" value="検索" onclick="selectNav()">
    </div>
    <div class="search-form">
      入力して検索!<br>
      <input type="textbox" id="go" value="" placeholder="名前or緯度,経度で検索"><br>
      ↓<br>
      <input type="textbox" id="fin" value="" placeholder="名前or緯度,経度で検索"><br>
      <select id="testreset">
        <option value="leave">残す</option>
        <option value="delete">消す</option>
      </select>
    <input type="button" id="btn" value="ナビ" onclick="searchNav()">
    </div>
  </div>
</div>

<style>
  #map {
    height: 70vh;
    width: 130vh;
  }
</style>

<script>
  let map
  let marker

  function initMap(){
    geocoder = new google.maps.Geocoder()
    map = new google.maps.Map(document.getElementById('map'), {
        center:  {lat: 36.31616117084595, lng: 140.0458184125},  //中心用
        zoom: 4.6, //日本全体用
        mayTypeId: google.maps.MapTypeId.ROADMAP
      });

    <% @spots.each do |spot|%>
      ( function() {
        let markerLatLng = new google.maps.LatLng({lat: <%= spot.lat %>, lng: <%= spot.lng %>});
        let marker = new google.maps.Marker({
          position: markerLatLng,
          map: map,
          animation: google.maps.Animation.BOUNCE
        });
        let infowindow = new google.maps.InfoWindow({
          position: markerLatLng,
          content:
              "<a href='<%= spot_path(spot) %>' ><%= spot.title %></a>" +
              "(緯度,経度)=(<%= spot.lat %>,<%= spot.lng %>)"
            });
        marker.addListener('click', function() {
          infowindow.open(map, marker);
          });
      })();
     <% end %>
  }

    // 検索用
    function searchNav(){
    let renav = document.getElementById('testreset').value;
    let inputstart = document.getElementById('go').value;
    let inputend = document.getElementById('fin').value;
      if (renav == "delete"){
        initMap(map);　//前の情報が残らない様に一度初期化
      }
    let directionsService = new google.maps.DirectionsService;
    let directionsRenderer = new google.maps.DirectionsRenderer;
    directionsService.route({
      origin: inputstart, //スタート地点
      destination: inputend,　//ゴール地点
      travelMode: google.maps.TravelMode.DRIVING,　//電車・徒歩ver対応しない為自動車に限定
      avoidHighways: true, //高速禁止
      avoidTolls: true //有料区間禁止(上記と併せて徒歩でも行けるようなルートにする)
    }, function(response, status) {
        console.log(response);
        if (status === google.maps.DirectionsStatus.OK) {
          directionsRenderer.setMap(map);
          directionsRenderer.setDirections(response);
          directionsRenderer.setOptions({
            polylineOptions: {
                strokeColor: '#f246c5',
                strokeOpacity: 0.8,
                strokeWeight: 8
            }
          });
          alert("ルート検出！")
          }else{
            alert("すみません、検索出来ません")
          }
      });
  }

  // セレクト用
  function selectNav(){
    let renav = document.getElementById('reset').value;
    let inputstart = document.getElementById('start').value;
    let inputend = document.getElementById('end').value;
      if (renav == "delete"){
        initMap(map);
      }
    let directionsService = new google.maps.DirectionsService;
    let directionsRenderer = new google.maps.DirectionsRenderer;
    directionsService.route({
      origin: inputstart,
      destination: inputend,
      travelMode: google.maps.TravelMode.DRIVING,
      avoidHighways: true,
      avoidTolls: true
    }, function(response, status) {
        console.log(response);
        if (status === google.maps.DirectionsStatus.OK) {
          directionsRenderer.setMap(map);
          directionsRenderer.setDirections(response);
          directionsRenderer.setOptions({
            polylineOptions: {
                strokeColor: '#f246c5',
                strokeOpacity: 0.8,
                strokeWeight: 8
            }
          });
          alert("ルート検出！")
        }else{
          alert("すみません、検索出来ません")
        }
      });
  }
</script>
